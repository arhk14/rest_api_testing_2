pipeline {
agent any

parameters {
    string(name: 'NUMBER_OF_THREADS', defaultValue: '10', description: 'Number of threads')
    string(name: 'RAMP_UP', defaultValue: '5', description: 'Ramp-up period (in seconds)')
    string(name: 'LOOP_COUNT', defaultValue: '1', description: 'Loop count')
    string(name: 'DURATION', defaultValue: '60', description: 'Test duration (in seconds)')
    string(name: 'TPS', defaultValue: '10', description: 'Transactions per second (TPS)')
}

stages {
    stage('Checkout') {
        steps {
            git url: 'https://github.com/arhk14/rest_api_testing_2.git', credentialsId: 'Git_Authentication'
        }
    }

    stage('Run JMeter') {
        steps {
            script {
                sh 'wget https://github.com/arhk14/rest_api_testing_2/raw/master/list_of_users_28062023.jmx'
                
                def timestamp = new Date().format('yyyyMMdd_HHmmss')
                def reportFolder = "jmeter-report-${timestamp}"
                
                sh "jmeter -n -t <span class="math-inline">\{WORKSPACE\}/list\_of\_users\_28062023\.jmx " \+
"-Jthreads={params.NUMBER_OF_THREADS} " +
"-Jrampup=params.RAMP 
U
​
 P"+"−Jloops={params.LOOP_COUNT} " +
"-Jduration=params.DURATION"+"−Jtps={params.TPS} " +
"-l ${reportFolder}/results.jtl"

                sh "perfReport ${reportFolder}/results.jtl"
                
                env.REPORT_FOLDER = reportFolder
            }
        }
    }

    stage('Publish HTML Report') {
        steps {
            script {
                publishHTML(target: [
                    allowMissing: false,
                    alwaysLinkToLastBuild: false,
                    keepAll: true,
                    reportDir: env.REPORT_FOLDER,
                    reportFiles: 'index.html',
                    reportName: 'JMeter HTML Report'
                ])
            }
        }
    }
}
}
